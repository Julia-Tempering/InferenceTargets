import{_ as r,C as o,c as d,o as p,j as t,aA as i,G as a,a as l,w as n}from"./chunks/framework.Uk63vj1k.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"reference.md","filePath":"reference.md","lastUpdated":null}'),c={name:"reference.md"},g={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""};function k(b,e,m,_,T,y){const s=o("Badge");return p(),d("div",null,[t("details",g,[t("summary",null,[e[0]||(e[0]=t("a",{id:"InferenceTargets.find_targetIds-Tuple{Module}",href:"#InferenceTargets.find_targetIds-Tuple{Module}"},[t("span",{class:"jlbinding"},"InferenceTargets.find_targetIds")],-1)),e[1]||(e[1]=l()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[3]||(e[3]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">find_targetIds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the targetIds provided by the given module as a <code>Vector{Symbol}</code>.</p><p>An exception will be thrown if the module is not a target collection.</p>',3)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[2]||(e[2]=[t("a",{href:"https://github.com/Julia-Tempering/InferenceTargets/blob/ff18a573ec56fd43985d7a233d27e99fb992976f/src/api.jl#L12-L18",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",u,[t("summary",null,[e[4]||(e[4]=t("a",{id:"InferenceTargets.find_targetIds-Tuple{}",href:"#InferenceTargets.find_targetIds-Tuple{}"},[t("span",{class:"jlbinding"},"InferenceTargets.find_targetIds")],-1)),e[5]||(e[5]=l()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[7]||(e[7]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">find_targetIds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Query all loaded modules. Create a dictionary, where the keys are the modules <code>m</code> that are target collections, and the value is the result of <code>find_targetIds(m)</code>.</p>',2)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[6]||(e[6]=[t("a",{href:"https://github.com/Julia-Tempering/InferenceTargets/blob/ff18a573ec56fd43985d7a233d27e99fb992976f/src/api.jl#L27-L33",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",h,[t("summary",null,[e[8]||(e[8]=t("a",{id:"InferenceTargets.load_target-Tuple{Module, Any}",href:"#InferenceTargets.load_target-Tuple{Module, Any}"},[t("span",{class:"jlbinding"},"InferenceTargets.load_target")],-1)),e[9]||(e[9]=l()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[11]||(e[11]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, targetId)</span></span></code></pre></div><p>Load the target corresponding to the provided targetId. The targetId can be encoded as a <code>String</code>, <code>Symbol</code>, or <code>Val{:symbol}</code> and will be automatically converted to the appropriate representation used in the target collection.</p><p>An exception will be thrown if the module is not a target collection.</p>',3)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[10]||(e[10]=[t("a",{href:"https://github.com/Julia-Tempering/InferenceTargets/blob/ff18a573ec56fd43985d7a233d27e99fb992976f/src/api.jl#L44-L54",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",f,[t("summary",null,[e[12]||(e[12]=t("a",{id:"InferenceTargets.summary_table-Tuple{Module}",href:"#InferenceTargets.summary_table-Tuple{Module}"},[t("span",{class:"jlbinding"},"InferenceTargets.summary_table")],-1)),e[13]||(e[13]=l()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[15]||(e[15]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">summary_table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a <code>Tables</code> providing information on the targets in the given collection.</p><p>An exception will be thrown if the module is not a target collection.</p>',3)),a(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[14]||(e[14]=[t("a",{href:"https://github.com/Julia-Tempering/InferenceTargets/blob/ff18a573ec56fd43985d7a233d27e99fb992976f/src/api.jl#L70-L78",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const j=r(c,[["render",k]]);export{C as __pageData,j as default};
